╔══════════════════════════════════════════════════════════════╗
║         🔥 FIREBASE - БЫСТРЫЙ СТАРТ                          ║
╚══════════════════════════════════════════════════════════════╝

📌 ШАГ 1: СОЗДАЙТЕ ПРОЕКТ
   1. Откройте: https://console.firebase.google.com/
   2. "Создать проект" → назовите "DOTA CARDS"
   3. Google Analytics - можно отключить
   4. Нажмите "Создать"

📌 ШАГ 2: НАСТРОЙТЕ AUTHENTICATION
   1. Боковое меню → "Authentication"
   2. "Get started" (если первый раз)
   3. Вкладка "Sign-in method"
   4. Нажмите "Email/Password"
   5. Включите первый переключатель
   6. "Save"

📌 ШАГ 3: СОЗДАЙТЕ REALTIME DATABASE
   1. Боковое меню → "Realtime Database"
   2. "Создать базу данных"
   3. Регион: europe-west1 (для Европы)
   4. Режим: "Locked mode"
   5. "Enable"

📌 ШАГ 4: ПРАВИЛА БЕЗОПАСНОСТИ
   1. Вкладка "Rules" в Realtime Database
   2. Вставьте этот код:
   
   {
     "rules": {
       "users": {
         "$uid": {
           ".read": "auth != null",
           ".write": "$uid === auth.uid"
         }
       }
     }
   }
   
   3. "Publish"

📌 ШАГ 5: ПОЛУЧИТЕ КОНФИГУРАЦИЮ
   1. Иконка шестеренки ⚙️ → "Project settings"
   2. Прокрутите вниз → "Your apps"
   3. Нажмите Web иконку (</>)
   4. Дайте имя: "DOTA CARDS Web"
   5. НЕ включайте Hosting
   6. "Register app"
   7. СКОПИРУЙТЕ firebaseConfig

📌 ШАГ 6: ВСТАВЬТЕ КОНФИГУРАЦИЮ
   1. Откройте файл: firebase-config.js
   2. Найдите строки с "ВАШ_API_KEY" и т.д.
   3. Замените на реальные значения:

   const firebaseConfig = {
       apiKey: "AIzaSy...",              ← Ваш ключ
       authDomain: "dota-cards-xxx.firebaseapp.com",
       databaseURL: "https://dota-cards-xxx-default-rtdb.firebaseio.com",
       projectId: "dota-cards-xxx",
       storageBucket: "dota-cards-xxx.appspot.com",
       messagingSenderId: "123456789",
       appId: "1:123456789:web:abc..."
   };

   4. Сохраните файл

📌 ШАГ 7: ТЕСТИРОВАНИЕ
   1. Откройте index.html в браузере
   2. Откройте Console (F12)
   3. Должно быть: ✅ Firebase успешно инициализирован!
   4. Зарегистрируйте нового пользователя
   5. Проверьте Firebase Console → Authentication (должен появиться пользователь)
   6. Проверьте Realtime Database → users (должны быть данные)

╔══════════════════════════════════════════════════════════════╗
║                    ✅ ГОТОВО!                                ║
╚══════════════════════════════════════════════════════════════╝

💡 ВАЖНО:
   - Firebase SDK уже подключен в index.html
   - firebase-config.js уже создан
   - Нужно ТОЛЬКО заменить конфигурацию в firebase-config.js

🎮 ТЕКУЩИЙ РЕЖИМ:
   Игра работает на localStorage (локально)
   После настройки Firebase - данные будут в облаке!

📚 ПОЛНАЯ ИНСТРУКЦИЯ:
   Смотрите файл FIREBASE_ИНСТРУКЦИЯ.md

🔗 ПОЛЕЗНЫЕ ССЫЛКИ:
   Firebase Console: https://console.firebase.google.com/
   Документация: https://firebase.google.com/docs
   
═══════════════════════════════════════════════════════════════

СТАТУС ФАЙЛОВ:
✅ index.html - Firebase SDK подключен
✅ firebase-config.js - создан, нужна конфигурация
✅ game.js - работает с localStorage
⏳ game-firebase.js - пример полной Firebase интеграции

СЛЕДУЮЩИЕ ШАГИ:
1. Настройте Firebase Console
2. Вставьте конфигурацию в firebase-config.js
3. При желании мигрируйте на game-firebase.js

═══════════════════════════════════════════════════════════════

